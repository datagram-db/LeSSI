# Generated from Parmenides/TBox/parmenides_tbox.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,34,284,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,1,0,1,0,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,
        1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,6,
        1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,
        13,1,13,1,13,1,13,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,16,1,16,1,
        16,1,16,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,
        19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,
        20,1,20,1,20,1,21,1,21,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,
        24,1,25,1,25,1,26,1,26,1,27,1,27,1,27,1,27,5,27,188,8,27,10,27,12,
        27,191,9,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,29,3,29,201,8,29,
        1,29,1,29,3,29,205,8,29,1,29,3,29,208,8,29,1,30,3,30,211,8,30,1,
        30,1,30,1,31,4,31,216,8,31,11,31,12,31,217,1,31,1,31,1,32,1,32,1,
        32,1,32,5,32,226,8,32,10,32,12,32,229,9,32,1,32,1,32,1,32,1,32,1,
        32,1,33,1,33,5,33,238,8,33,10,33,12,33,241,9,33,1,33,1,33,1,34,5,
        34,246,8,34,10,34,12,34,249,9,34,1,34,1,34,1,34,1,34,1,34,1,34,1,
        34,1,34,3,34,259,8,34,1,35,5,35,262,8,35,10,35,12,35,265,9,35,1,
        35,1,35,1,35,1,35,1,35,3,35,272,8,35,1,36,1,36,3,36,276,8,36,1,36,
        1,36,1,37,4,37,281,8,37,11,37,12,37,282,1,227,0,38,1,1,3,2,5,3,7,
        4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,
        16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,
        27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,0,71,0,73,0,75,0,
        1,0,6,2,0,34,34,92,92,1,0,45,45,3,0,9,10,13,13,32,32,2,0,10,10,13,
        13,1,0,48,57,2,0,69,69,101,101,295,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,
        0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,
        0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,
        0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,
        0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,
        0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,
        0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,
        0,0,0,67,1,0,0,0,1,77,1,0,0,0,3,79,1,0,0,0,5,86,1,0,0,0,7,91,1,0,
        0,0,9,99,1,0,0,0,11,106,1,0,0,0,13,111,1,0,0,0,15,114,1,0,0,0,17,
        116,1,0,0,0,19,118,1,0,0,0,21,120,1,0,0,0,23,122,1,0,0,0,25,124,
        1,0,0,0,27,126,1,0,0,0,29,130,1,0,0,0,31,133,1,0,0,0,33,137,1,0,
        0,0,35,141,1,0,0,0,37,145,1,0,0,0,39,148,1,0,0,0,41,164,1,0,0,0,
        43,168,1,0,0,0,45,172,1,0,0,0,47,174,1,0,0,0,49,176,1,0,0,0,51,179,
        1,0,0,0,53,181,1,0,0,0,55,183,1,0,0,0,57,194,1,0,0,0,59,207,1,0,
        0,0,61,210,1,0,0,0,63,215,1,0,0,0,65,221,1,0,0,0,67,235,1,0,0,0,
        69,258,1,0,0,0,71,271,1,0,0,0,73,273,1,0,0,0,75,280,1,0,0,0,77,78,
        5,59,0,0,78,2,1,0,0,0,79,80,5,85,0,0,80,81,5,80,0,0,81,82,5,68,0,
        0,82,83,5,65,0,0,83,84,5,84,0,0,84,85,5,69,0,0,85,4,1,0,0,0,86,87,
        5,111,0,0,87,88,5,118,0,0,88,89,5,101,0,0,89,90,5,114,0,0,90,6,1,
        0,0,0,91,92,5,114,0,0,92,93,5,101,0,0,93,94,5,112,0,0,94,95,5,108,
        0,0,95,96,5,97,0,0,96,97,5,99,0,0,97,98,5,101,0,0,98,8,1,0,0,0,99,
        100,5,73,0,0,100,101,5,78,0,0,101,102,5,86,0,0,102,103,5,69,0,0,
        103,104,5,78,0,0,104,105,5,84,0,0,105,10,1,0,0,0,106,107,5,102,0,
        0,107,108,5,114,0,0,108,109,5,111,0,0,109,110,5,109,0,0,110,12,1,
        0,0,0,111,112,5,97,0,0,112,113,5,115,0,0,113,14,1,0,0,0,114,115,
        5,40,0,0,115,16,1,0,0,0,116,117,5,41,0,0,117,18,1,0,0,0,118,119,
        5,63,0,0,119,20,1,0,0,0,120,121,5,123,0,0,121,22,1,0,0,0,122,123,
        5,125,0,0,123,24,1,0,0,0,124,125,5,44,0,0,125,26,1,0,0,0,126,127,
        5,65,0,0,127,128,5,78,0,0,128,129,5,68,0,0,129,28,1,0,0,0,130,131,
        5,79,0,0,131,132,5,82,0,0,132,30,1,0,0,0,133,134,5,78,0,0,134,135,
        5,79,0,0,135,136,5,84,0,0,136,32,1,0,0,0,137,138,5,114,0,0,138,139,
        5,101,0,0,139,140,5,109,0,0,140,34,1,0,0,0,141,142,5,97,0,0,142,
        143,5,100,0,0,143,144,5,100,0,0,144,36,1,0,0,0,145,146,5,116,0,0,
        146,147,5,111,0,0,147,38,1,0,0,0,148,149,5,119,0,0,149,150,5,105,
        0,0,150,151,5,116,0,0,151,152,5,104,0,0,152,153,5,45,0,0,153,154,
        5,112,0,0,154,155,5,114,0,0,155,156,5,111,0,0,156,157,5,112,0,0,
        157,158,5,101,0,0,158,159,5,114,0,0,159,160,5,116,0,0,160,161,5,
        105,0,0,161,162,5,101,0,0,162,163,5,115,0,0,163,40,1,0,0,0,164,165,
        5,105,0,0,165,166,5,115,0,0,166,167,5,97,0,0,167,42,1,0,0,0,168,
        169,5,97,0,0,169,170,5,108,0,0,170,171,5,108,0,0,171,44,1,0,0,0,
        172,173,5,91,0,0,173,46,1,0,0,0,174,175,5,93,0,0,175,48,1,0,0,0,
        176,177,5,45,0,0,177,178,5,62,0,0,178,50,1,0,0,0,179,180,5,58,0,
        0,180,52,1,0,0,0,181,182,5,46,0,0,182,54,1,0,0,0,183,189,5,34,0,
        0,184,188,8,0,0,0,185,186,5,92,0,0,186,188,7,0,0,0,187,184,1,0,0,
        0,187,185,1,0,0,0,188,191,1,0,0,0,189,187,1,0,0,0,189,190,1,0,0,
        0,190,192,1,0,0,0,191,189,1,0,0,0,192,193,5,34,0,0,193,56,1,0,0,
        0,194,195,5,110,0,0,195,196,5,111,0,0,196,197,5,110,0,0,197,198,
        5,101,0,0,198,58,1,0,0,0,199,201,7,1,0,0,200,199,1,0,0,0,200,201,
        1,0,0,0,201,202,1,0,0,0,202,208,3,69,34,0,203,205,7,1,0,0,204,203,
        1,0,0,0,204,205,1,0,0,0,205,206,1,0,0,0,206,208,3,75,37,0,207,200,
        1,0,0,0,207,204,1,0,0,0,208,60,1,0,0,0,209,211,7,1,0,0,210,209,1,
        0,0,0,210,211,1,0,0,0,211,212,1,0,0,0,212,213,3,75,37,0,213,62,1,
        0,0,0,214,216,7,2,0,0,215,214,1,0,0,0,216,217,1,0,0,0,217,215,1,
        0,0,0,217,218,1,0,0,0,218,219,1,0,0,0,219,220,6,31,0,0,220,64,1,
        0,0,0,221,222,5,47,0,0,222,223,5,42,0,0,223,227,1,0,0,0,224,226,
        9,0,0,0,225,224,1,0,0,0,226,229,1,0,0,0,227,228,1,0,0,0,227,225,
        1,0,0,0,228,230,1,0,0,0,229,227,1,0,0,0,230,231,5,42,0,0,231,232,
        5,47,0,0,232,233,1,0,0,0,233,234,6,32,0,0,234,66,1,0,0,0,235,239,
        5,35,0,0,236,238,8,3,0,0,237,236,1,0,0,0,238,241,1,0,0,0,239,237,
        1,0,0,0,239,240,1,0,0,0,240,242,1,0,0,0,241,239,1,0,0,0,242,243,
        6,33,0,0,243,68,1,0,0,0,244,246,7,4,0,0,245,244,1,0,0,0,246,249,
        1,0,0,0,247,245,1,0,0,0,247,248,1,0,0,0,248,250,1,0,0,0,249,247,
        1,0,0,0,250,251,5,46,0,0,251,259,3,75,37,0,252,253,3,75,37,0,253,
        254,5,46,0,0,254,259,1,0,0,0,255,256,3,75,37,0,256,257,3,73,36,0,
        257,259,1,0,0,0,258,247,1,0,0,0,258,252,1,0,0,0,258,255,1,0,0,0,
        259,70,1,0,0,0,260,262,7,4,0,0,261,260,1,0,0,0,262,265,1,0,0,0,263,
        261,1,0,0,0,263,264,1,0,0,0,264,266,1,0,0,0,265,263,1,0,0,0,266,
        267,5,46,0,0,267,272,3,75,37,0,268,269,3,75,37,0,269,270,5,46,0,
        0,270,272,1,0,0,0,271,263,1,0,0,0,271,268,1,0,0,0,272,72,1,0,0,0,
        273,275,7,5,0,0,274,276,7,1,0,0,275,274,1,0,0,0,275,276,1,0,0,0,
        276,277,1,0,0,0,277,278,3,75,37,0,278,74,1,0,0,0,279,281,7,4,0,0,
        280,279,1,0,0,0,281,282,1,0,0,0,282,280,1,0,0,0,282,283,1,0,0,0,
        283,76,1,0,0,0,16,0,187,189,200,204,207,210,217,227,239,247,258,
        263,271,275,282,1,6,0,0
    ]

class parmenides_tboxLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    STRING = 28
    NULL = 29
    NUMBER = 30
    INTEGER = 31
    SPACE = 32
    COMMENT = 33
    LINE_COMMENT = 34

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "'UPDATE'", "'over'", "'replace'", "'INVENT'", "'from'", 
            "'as'", "'('", "')'", "'?'", "'{'", "'}'", "','", "'AND'", "'OR'", 
            "'NOT'", "'rem'", "'add'", "'to'", "'with-properties'", "'isa'", 
            "'all'", "'['", "']'", "'->'", "':'", "'.'", "'none'" ]

    symbolicNames = [ "<INVALID>",
            "STRING", "NULL", "NUMBER", "INTEGER", "SPACE", "COMMENT", "LINE_COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "STRING", "NULL", "NUMBER", "INTEGER", "SPACE", 
                  "COMMENT", "LINE_COMMENT", "DecimalFloatingConstant", 
                  "FractionalConstant", "ExponentPart", "DIGIT" ]

    grammarFileName = "parmenides_tbox.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


